html{
    head{
        link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto")
        link(rel=stylesheet href=index.css)

    }
    body(data-botid=>botid data-grammar=>grammar){
        template#option {
            textarea.option(rows=1 placeholder=Option)
        }
        template#part {
            fieldset.part {
                label[Part name: ]{
                    br
                    input.partname(type=text placeholder="Part Name")
                }
                label.optslabel[Options: ]{
                    span.options
                }
                button.addoption(type=button title="Add another option")[+]
                button.removeoption(type=button title="Remove last option")[-]
            }
        }
        form#editor
        button#addpart(type=button)[Add another part]
        br br
        button#savegrammar(type=button)[Save Grammar]
        span#saveresult
        h1[Explanation]
        p[The generation starts at the ]{samp[main]}[ part, and from there you can reference other parts, using ]{samp[<part>]}[. For example: ]
        code[When the <thing> is <description>!]
        p[Will put the parts ]{samp[thing]}[ and ]{samp[description]}[ into the tweet.]
        p[Then ]{samp[thing]}[ can consist of 2 options: ]{samp[impostor]}[ & ]{ samp[crewmate]}
        p[and ]{samp[description]}[ can also consist of 2 options: ]{samp[sus]}[ & ]{ samp[sussy]}
        p[For this configuration, there are four outcomes:]
        code[When the ]{mark[impostor]}[ is ]{mark[sus]}[!]
        code[When the ]{mark[impostor]}[ is ]{mark[sussy]}[!]
        code[When the ]{mark[crewmate]}[ is ]{mark[sus]}[!]
        code[When the ]{mark[crewmate]}[ is ]{mark[sussy]}[!]
        p[The configuration for this would look like:]
        div.example(aria-hidden=true data-main="When the <thing> is <description>!" data-thing="impostor,crewmate" data-description="sus,sussy")

    }{ script(src=generator.js) script(src=editor.js) }
}